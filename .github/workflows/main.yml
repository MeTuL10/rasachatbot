name: chatbot application train and deployment
on:
  push
#  push:
#    paths:
#      - data/**
#      - domain.yml
jobs:
  dockercompose:
    name: docker compose
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./Dockerfile
            image: metul/rasaserver
#          - dockerfile: ./actions/Dockerfile
#            image: metul/rasaaction
          - dockerfile: ./webpages/Dockerfile
            image: metul/rasaweb
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}     
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}
      - name: build and push image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  check-files:
    name: checking modified check-files
    runs-on: ubuntu-latest
    steps:
      - name: Get all changed data and domain files
        id: changed-files
        uses: tj-actions/changed-files@v36
        with:
          files: |
            models
            domain.yml
  training-testing:
    name: Training and Testing
    runs-on: ubuntu-latest
    needs: check-files
    if: steps.changed-files.outputs.any_changed == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Rasa Train and Test GitHub Action
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          data_validate: true
          rasa_train: true
          cross_validation: true
          rasa_test: false
          #test_type: all
          publish_summary: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload model
        uses: actions/upload-artifact@v3.1.2
        with:
          name: model
          path: ./models
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: model
          path: ./models

  deploy:
    needs:  training-testing
    name: Deploy yamls to azure vm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: >-  
            -rltgoDzvO
            --exclude='.github'
            --exclude='.git'
            --exclude='.keras'
            --exclude='.config'
            --exclude='.gitignore'
            --exclude='Text.txt'
            --exclude='tempworkflow.txt'
            --exclude='graph.html'
            --exclude='README.md'
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /home/azureuser/pipelinetest/
          SCRIPT_BEFORE: |
            cd pipelinetest/
            docker compose down
            rm -r /home/azureuser/pipelinetest/previous_version_copy/models/*
            rsync -av --progress /home/azureuser/pipelinetest/ /home/azureuser/pipelinetest/previous_version_copy/ --exclude previous_version_copy
            rm -r /home/azureuser/pipelinetest/models/*
          SCRIPT_AFTER: |
            cd pipelinetest/
            docker compose up -d

  delete-artifact:
    needs: deploy
    name: delete the model artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: delete the model artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: model